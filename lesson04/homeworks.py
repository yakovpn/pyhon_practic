
import random
# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с
# повторениями). Выдать без повторений в порядке возрастания все те числа, которые
# встречаются в обоих наборах.
# Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во
# элементов второго множества. Затем пользователь вводит сами элементы множеств.
# 11 6
# 2 4 6 8 10 12 10 8 6 4 2
# 3 6 9 12 15 18
# 6 12
# множествами решаем, методы вычетания пересечения объединения и их методах
# решение в строку


def homework01():

    lst = [random.randint(0, 30) for _ in range(
        int(input("Введите количество элементов первого множества:")))]
    lst2 = [random.randint(0, 30) for _ in range(
        int(input("Введите количество элементов второго мнжэества:")))]
    res = list(set(lst).intersection(set(lst2)))
    print(lst)
    print(lst2)
    print(res)

# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растет на
# круглой грядке, причем кусты высажены только по окружности. Таким образом, у
# каждого куста есть ровно два соседних. Всего на грядке растет N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них
# выросло различное число ягод – на i-ом кусте выросло ai
#  ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# Собирающий модуль за один заход, находясь непосредственно перед некоторым
# кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может
# собрать за один заход собирающий модуль, находясь перед некоторым кустом
# заданной во входном файле грядки.
# 4 -> 1 2 3 4
# 9
# списки, индексация, берем слева и справа, стартуем с единицы, и все это суммируется
# собрали колво кустов, потом вес, ввели переменную максимально тяжелую сумму кустов, цикл, внтури проверка

def homework02():
    lst = [random.randint(0, 10) for _ in range(
        int(input("Введите количество кустов в окружности:")))]
    max = 0
    for i in range(1, len(lst)):
        positionMax = lst[i-1]+lst[i]+lst[i+1 if i < len(lst)-1 else 0]
        max = positionMax if positionMax > max else max
    print(lst)
    print(max)


homework02()
