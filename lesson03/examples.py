def additional01():
    num = {k: v ** 3 for k, v in zip("ASDFGHJK", range(1, 11))}
    print(num)
# Дан список чисел. Определите, сколько в нем
# встречается различных чисел.
# Input: [1, 1, 2, 0, -1, 3, 4, 4]
# Output: 6
# Примечание: Пользователь может вводить значения
# списка или список задан изначально.


def example01():
    list = [1, 1, 2, 0, -1, 3, 4, 4]
    print(len(set(list)))

    print(f'Количество различных элементов в списке {len(dif)}')

# Задача №19. Решение в группах
# Дана последовательность из N целых чисел и число
# K. Необходимо сдвинуть всю последовательность
# (сдвиг - циклический) на K элементов вправо, K –
# положительное число.
# Input: [1, 2, 3, 4, 5] k = 3
# Output: [4, 5, 1, 2, 3]
# Примечание: Пользователь может вводить значения
# списка или список задан изначально.


def example02():
    list = [1, 2, 3, 4, 5]
    k = 3
#    list = list[-k+1:] + list[:-k+1]
    for i in range(k-1):
        list.insert(0, list.pop(-1))
    print(list)

# Задача №21. Решение в группах
# Напишите программу для печати всех уникальных
# значений в словаре.
# Input: [{"V": "S001"}, {"V": "S002"}, {"VI": "S001"},
# {"VI": "S005"}, {"VII": " S005 "}, {" V ":" S009 "}, {" VIII
# ":" S007 "}]
# Output: {'S005', 'S002', 'S007', 'S001', 'S009'}
# Примечание: Список словарей задан изначально.
# Пользователь его не вводит


def example03():
    dict = [{"V": "S001"}, {"V": "S002"}, {"VI": "S001"},
            {"VI": "S005"}, {"VII": " S005 "}, {" V ": " S009 "}, {" VIII": " S007 "}]
    print(set(list(item.values())[0].strip() for item in dict))


# Задача №23. Решение в группах
# Дан массив, состоящий из целых чисел. Напишите
# программу, которая подсчитает количество
# элементов массива, больших предыдущего (элемента
# с предыдущим номером)
# Input: [0, -1, 5, 2, 3]
# Output: 2 (-1 < 5, 2 < 3)
# Примечание: Пользователь может вводить значения
# списка или список задан изначально.
def example04():
    list_nums = [0, -1, 5, 2, 3]
    print(sum([1 for i in range(1, len(list_nums))
          if list_nums[i] > list_nums[i-1]]))


example04()
